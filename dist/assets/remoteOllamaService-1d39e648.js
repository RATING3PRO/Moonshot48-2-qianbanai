var $=Object.defineProperty;var L=(m,t,e)=>t in m?$(m,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):m[t]=e;var d=(m,t,e)=>(L(m,typeof t!="symbol"?t+"":t,e),e);var f=(m,t,e)=>new Promise((s,n)=>{var u=o=>{try{i(e.next(o))}catch(g){n(g)}},r=o=>{try{i(e.throw(o))}catch(g){n(g)}},i=o=>o.done?s(o.value):Promise.resolve(o.value).then(u,r);i((e=e.apply(m,t)).next())});import{R as a,S as l}from"./index-5a8bf324.js";const A=class A{static get remoteURL(){return this._remoteURL}static set remoteURL(t){this._remoteURL=t,t?localStorage.setItem("remote_ollama_url",t):localStorage.removeItem("remote_ollama_url")}static getApiUrl(){if(!this._remoteURL&&a())return typeof l.BASE_URL=="object"&&l.BASE_URL!==null?String(l.BASE_URL):String(l.BASE_URL);const t=this._remoteURL||l.BASE_URL;let e="";e=String(t);let s=e.trim();return s.endsWith("/")&&(s=s.slice(0,-1)),s.includes("/api")?s:`${s}/api`}static hasRemoteURL(){return!!this._remoteURL}static isValidUrl(t){try{return new URL(t),!0}catch(e){return!1}}static sendMessage(u){return f(this,arguments,function*(t,e=[],s="gemma3:7b-instruct",n=""){try{const r=A.getApiUrl();if(!r)throw new Error("未设置远程Ollama API地址");let i=`你是一个友好、温暖的AI助手，名叫"牵伴"。你的目标是成为老年人的贴心伙伴，
提供情感支持、日常对话和实用信息。请用简单、直接、温暖的语言回应，避免过于复杂或技术性的表达。
回答应该简洁明了，避免过长的段落。使用礼貌、尊重的语气，偶尔可以使用一些适合老年人的幽默。
`;n&&(i+=n);const o={model:s,messages:[...e,{role:"user",content:t}],stream:!1,options:{temperature:l.PARAMETERS.temperature,top_p:l.PARAMETERS.top_p,num_predict:l.PARAMETERS.max_tokens,frequency_penalty:l.PARAMETERS.frequency_penalty}},g=a()?"Android":"浏览器";console.log(`[${g}] 使用${this._remoteURL?"远程":"本地"}模型 ${s} 生成回复...`,o);const h=r.endsWith("/")?r.slice(0,-1):r,c=yield fetch(`${h}/chat`,{method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json",Origin:window.location.origin},body:JSON.stringify(o),signal:AbortSignal.timeout(a()?9e4:6e4)});if(!c.ok){console.error("Ollama API响应错误:",c.status,c.statusText);const R=yield c.text();return console.error("错误详情:",R),a()?`Android应用无法连接到Ollama服务 (${c.status})。请确保：
1. 在设置中输入了正确的远程服务器地址
2. 远程服务器可以从公网访问
3. 服务器已安装并运行Ollama，且已下载模型 ${s}`:`与Ollama服务通信失败 (${c.status}): ${c.statusText}。请确保Ollama服务正在运行，且已下载模型 ${s}。`}const p=yield c.json();return console.log("Ollama API响应:",p),p&&p.message&&p.message.content?p.message.content:"抱歉，收到了空响应。请检查Ollama服务是否正确运行，以及是否已下载模型 "+s}catch(r){if(console.error(`[${a()?"Android":"浏览器"}] 调用Ollama API失败:`,r),r instanceof TypeError&&r.message.includes("fetch")){const i=this._remoteURL?"远程":"本地",o=this.getApiUrl();return a()?`Android应用无法连接到${i}Ollama服务。请确保：
1. 已在设置中填写正确的远程服务器地址
2. 网络连接正常并能访问该服务器
3. 服务器防火墙未阻止连接`:`无法连接到${i}Ollama服务。请确保：
1. ${i==="本地"?"Ollama已安装并正在运行":"远程服务器正在运行并可访问"}
2. 服务地址正确(${o})
3. ${i==="本地"?"没有防火墙阻止连接":"网络连接正常"}`}return r instanceof DOMException&&r.name==="TimeoutError"?a()?"与远程服务器连接超时，请确保远程服务器响应正常，或检查您的网络连接。":"连接Ollama服务超时，请检查服务器负载或网络连接。":`与Ollama服务通信时出现问题: ${r instanceof Error?r.message:String(r)}。请确保Ollama服务正在运行。`}})}static testConnection(t){return f(this,null,function*(){try{const e=t||this.getApiUrl();if(!e)return{success:!1,message:"未设置API地址"};if(!this.isValidUrl(e))return{success:!1,message:`无效的URL格式: ${e}`};const s=e.includes("/api")?e:`${e}/api`,n=s.endsWith("/")?s.slice(0,-1):s;console.log(`[${a()?"Android":"浏览器"}] 测试Ollama连接: ${n}/tags`);const u=yield fetch(`${n}/tags`,{headers:{Accept:"application/json",Origin:window.location.origin},signal:AbortSignal.timeout(a()?15e3:1e4)});return u.ok?{success:!0,message:`成功连接到${t?"测试":this._remoteURL?"远程":"本地"}Ollama服务`}:{success:!1,message:`Ollama服务返回错误: ${u.status} ${u.statusText}`}}catch(e){console.error(`[${a()?"Android":"浏览器"}] 测试Ollama连接失败:`,e);const s=t?"测试":this._remoteURL?"远程":"本地";return a()?e instanceof TypeError&&e.message.includes("fetch")?{success:!1,message:`Android应用无法连接到${s}Ollama服务。请检查URL格式和服务器状态。`}:{success:!1,message:`连接测试失败: ${e instanceof Error?e.message:String(e)}`}:e instanceof TypeError&&e.message.includes("fetch")?{success:!1,message:`无法连接到${s}Ollama服务。请确保服务正在运行。`}:{success:!1,message:`连接测试失败: ${e instanceof Error?e.message:String(e)}`}}})}static getModels(){return f(this,null,function*(){try{const t=this.getApiUrl();if(!t)return console.error("未设置API地址"),[];const e=t.endsWith("/")?t.slice(0,-1):t;console.log(`[${a()?"Android":"浏览器"}] 获取模型列表: ${e}/tags`);const s=yield fetch(`${e}/tags`,{headers:{Accept:"application/json",Origin:window.location.origin},signal:AbortSignal.timeout(a()?15e3:1e4)});if(!s.ok)return console.error("获取模型列表失败:",s.status,s.statusText),[];const n=yield s.json();return console.log("获取到的模型列表:",n),n&&n.models?n.models.map(u=>u.name):[]}catch(t){return console.error(`[${a()?"Android":"浏览器"}] 获取Ollama模型列表失败:`,t),[]}})}static setAndValidateRemoteURL(t){return f(this,null,function*(){const e=t.trim();if(!this.isValidUrl(e))return{success:!1,message:"无效的URL格式。请输入完整的URL，包括http://或https://"};const s=yield this.testConnection(e);return s.success?(this.remoteURL=e,{success:!0,message:`成功连接到远程Ollama服务: ${e}`}):s})}static clearRemoteURL(){this.remoteURL=null}};d(A,"_remoteURL",localStorage.getItem("remote_ollama_url"));let U=A;export{U as R};
